# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := neo
DEFS_Debug :=

# Flags passed to all source files.
CFLAGS_Debug := \
	-O2 \
	-Wall

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug :=

INCS_Debug := \
	-Isrc \
	-Isrc/qzFeedsExt \
	-Isrc/unix

DEFS_Release :=

# Flags passed to all source files.
CFLAGS_Release :=

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release :=

INCS_Release := \
	-Isrc \
	-Isrc/qzFeedsExt \
	-Isrc/unix

OBJS := \
	$(obj).target/$(TARGET)/src/util/neo_err.o \
	$(obj).target/$(TARGET)/src/util/neo_files.o \
	$(obj).target/$(TARGET)/src/util/neo_misc.o \
	$(obj).target/$(TARGET)/src/util/neo_rand.o \
	$(obj).target/$(TARGET)/src/util/ulist.o \
	$(obj).target/$(TARGET)/src/util/neo_hdf.o \
	$(obj).target/$(TARGET)/src/util/neo_str.o \
	$(obj).target/$(TARGET)/src/util/neo_date.o \
	$(obj).target/$(TARGET)/src/util/wildmat.o \
	$(obj).target/$(TARGET)/src/util/neo_hash.o \
	$(obj).target/$(TARGET)/src/util/missing.o \
	$(obj).target/$(TARGET)/src/csparse.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/html_deal.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/uri_deal.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/json_deal.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/cs_secret.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/cs_sns_oi_tea.o \
	$(obj).target/$(TARGET)/src/qzFeedsExt/cs_oi_tea.o \
	$(obj).target/$(TARGET)/src/util/ulocks.o \
	$(obj).target/$(TARGET)/src/util/rcfs.o \
	$(obj).target/$(TARGET)/src/util/skiplist.o \
	$(obj).target/$(TARGET)/src/util/dict.o \
	$(obj).target/$(TARGET)/src/util/neo_net.o \
	$(obj).target/$(TARGET)/src/util/neo_server.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug :=

LDFLAGS_Release :=

LIBS :=

$(obj).target/src/libneo.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/src/libneo.a: LIBS := $(LIBS)
$(obj).target/src/libneo.a: TOOLSET := $(TOOLSET)
$(obj).target/src/libneo.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink_thin)

all_deps += $(obj).target/src/libneo.a
# Add target alias
.PHONY: neo
neo: $(obj).target/src/libneo.a

# Add target alias to "all" target.
.PHONY: all
all: neo

